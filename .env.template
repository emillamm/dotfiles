export MY_NAME=
export MY_EMAIL=

# For respecting gitignore files with fzf
export FZF_DEFAULT_COMMAND='fd --type f'



## Python Setup ####################################################################
# Using pyenv for managing python versions when calling `python` (without a version)
# See https://github.com/pyenv/pyenv
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# Set static python directory for other applications to use, such as youcompleteme
# Those are installed using brew and can be called by specifying a version
# The path might differ between Mac types, could be `/opt/homebrew/opt/` instead
# Run `brew info python@3.10` to identify where a package in installed
export PYTHON_3_10="/usr/local/opt/python@3.10/bin"
export PYTHON_3_9="/usr/local/opt/python@3.9/bin"
export PYTHON_3_8="/usr/local/opt/python@3.8/bin"
export STATIC_PYTHON_BIN="$PYTHON_3_10:$PYTHON_3_9:$PYTHON_3_8"
export PATH="$STATIC_PYTHON_BIN:$PATH"

# Python version will resolve the following way
# * `python` => $PYENV_ROOT
# * `python3` => $PYTHON_3_10
# * `python3.9` => $PYTHON_3_9
## Python Setup End ################################################################



## Node Setup ######################################################################
# Inspired by https://www.growingwiththeweb.com/2018/01/slow-nvm-init.html
# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .env gets sourced multiple times
# by checking whether __init_nvm is a function.
if [ ! "$(whence -w __init_nvm)" = function ]; then
  export NVM_DIR="$HOME/.nvm"
  declare -a __node_commands=('nvm' 'node' 'npm' 'yarn' 'gulp' 'grunt' 'webpack')
  function __init_nvm() {
    for i in "${__node_commands[@]}"; do unalias $i; done
    # BEGIN load nvm
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
    [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
    # END load nvm
    unset __node_commands
    unset -f __init_nvm
  }
  for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
fi
## Node Setup End ##################################################################



## Java Setup ######################################################################
# See https://stackoverflow.com/questions/52524112/how-do-i-install-java-on-mac-osx-allowing-version-switching
export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8)
export JAVA_10_HOME=$(/usr/libexec/java_home -v10)
export JAVA_11_HOME=$(/usr/libexec/java_home -v11)
export JAVA_13_HOME=$(/usr/libexec/java_home -v13)
export JAVA_14_HOME=$(/usr/libexec/java_home -v14)
export JAVA_15_HOME=$(/usr/libexec/java_home -v15)
export JAVA_16_HOME=$(/usr/libexec/java_home -v16)
export JAVA_17_HOME=$(/usr/libexec/java_home -v17)
export JAVA_18_HOME=$(/usr/libexec/java_home -v18)
alias java8='export JAVA_HOME=$JAVA_8_HOME'
alias java10='export JAVA_HOME=$JAVA_10_HOME'
alias java11='export JAVA_HOME=$JAVA_11_HOME'
alias java13='export JAVA_HOME=$JAVA_13_HOME'
alias java14='export JAVA_HOME=$JAVA_14_HOME'
alias java15='export JAVA_HOME=$JAVA_15_HOME'
alias java16='export JAVA_HOME=$JAVA_16_HOME'
alias java17='export JAVA_HOME=$JAVA_17_HOME'
alias java18='export JAVA_HOME=$JAVA_18_HOME'
java15
## Java Setup End ##################################################################

